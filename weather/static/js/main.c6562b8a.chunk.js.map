{"version":3,"sources":["components/main/main.module.css","components/footer/footer.module.css","App/App.module.css","components/main/forecast/forecast.module.css","components/header/header.module.css","components/main/image/sprite.symbol.svg","components/header/formSearch/formSearch.js","actions/index.js","actions/actionTypes.js","actions/actionsWeather.js","components/header/header.js","components/main/forecast/forecast.js","components/main/main.js","components/footer/footer.js","App.js","reducers/index.js","index.js","components/header/formSearch/formSearch.module.css"],"names":["module","exports","main","main__weather-now","main__day-week","main__temperature","main__weather-now-svg","main__weather-now-header-container","main__weather-now-wind","main__weather-now-svg---wind","main__weather-now-city","main__weather-now-humidity","main__weather-now-svg---humidity","main__weather-now-day","container","design","link","author","body","footer","forecast","weather","day-week","temperature","weather-container","weather-svg","weather-wind","weather-svg---wind","weather-humidity","weather-svg---humidity","loader","lds-dual-ring","header__logo","__webpack_require__","p","FormSearch","search","evt","preventDefault","Promise","resolve","_this","props","target","value","then","clearTimeout","deb","setTimeout","searchValue","getCities","getCitiesNull","catch","err","console","log","_this2","this","getGeolocation","geolocation","city","init","myMap","window","ymaps","Map","center","coordX","coordY","zoom","controls","prevProps","prevState","searchCity","length","GeoObject","Point","pos","slice","ready","destroy","listWeather","concat","name","description","getWeatherNow","getWeatherForecast","_this3","country","list","react_default","a","createElement","className","classes","map","i","key","onClick","onclickList","id","onSubmit","submit","onChange","placeholder","type","Component","connect","state","reducer","listForecast","dispatch","data","fetch","res","json","response","typeWeather","getWeather","header","formSearch","_ref","getData","changeColor","index","background","changeShadow","boxShadow","clouds","valueClouds","all","currentData","format","Intl","DateTimeFormat","filter","arr","dt_txt","substring","Date","day","dt","style","weekday","temp","toFixed","xmlns","xmlnsXlink","xlinkHref","svg","fill","wind","speed","humidity","getDate","dataType","month","swithValue","cod","main_forecast_forecast","href","App","components_header_header","components_main_main","components_footer_footer","initialState","loading","rootReducer","combineReducers","arguments","undefined","action","Object","objectSpread","GeoObjectCollection","featureMember","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","es","src_App","ReactDOM","render","document","getElementById","header__form-search","header__form-input","header__form-ul","header__form-list","header__form-map"],"mappings":"2EACAA,EAAAC,QAAA,CAAkBC,KAAA,mBAAAC,oBAAA,gCAAAC,iBAAA,6BAAAC,kBAAA,gCAAAC,wBAAA,oCAAAC,qCAAA,iDAAAC,yBAAA,qCAAAC,+BAAA,2CAAAC,yBAAA,qCAAAC,6BAAA,yCAAAC,mCAAA,+CAAAC,wBAAA,yDCAlBb,EAAAC,QAAA,CAAkBa,UAAA,0BAAAC,OAAA,uBAAAC,KAAA,qBAAAC,OAAA,4CCAlBjB,EAAAC,QAAA,CAAkBiB,KAAA,kBAAAC,OAAA,wCCAlBnB,EAAAC,QAAA,CAAkBmB,SAAA,2BAAAC,QAAA,0BAAAC,WAAA,2BAAAC,YAAA,8BAAAC,oBAAA,oCAAAC,cAAA,8BAAAC,eAAA,+BAAAC,qBAAA,qCAAAC,mBAAA,mCAAAC,yBAAA,yCAAAC,OAAA,yBAAAC,gBAAA,qDCAlB/B,EAAAC,QAAA,CAAkB+B,aAAA,qFCDlBhC,EAAAC,QAAiBgC,EAAAC,EAAuB,wNCQlCC,6MAsBFC,OAAS,SAACC,GACNA,EAAIC,iBAEQ,IAAIC,QAAQ,SAAAC,GACrBA,EAAQC,EAAKC,MAAMN,OAAOC,EAAIM,OAAOC,UAChCC,KAAK,WAEVC,aAAaL,EAAKM,KAClBN,EAAKM,IAAMC,WAAW,WAEjBP,EAAKC,MAAMO,YAAeR,EAAKC,MAAMQ,UAAUT,EAAKC,MAAMO,aACrDR,EAAKC,MAAMS,iBAGlB,OAEFC,MAAM,SAACC,GACJC,QAAQC,IAAIF,yFArCH,IAAAG,EAAAC,KAElBA,KAAKf,MAAMgB,iBAEoB,KAA3BD,KAAKf,MAAMiB,aACXL,QAAQC,IAAIE,KAAKA,KAAKf,MAAMiB,YAAYC,MAI1CH,KAAKI,KAAK,WACNL,EAAKM,MAAS,IAAIC,OAAOC,MAAMC,IAAI,MAAO,CACtCC,OAAQ,CAACV,EAAKW,OAAQX,EAAKY,QAC3BC,KAAM,EACNC,SAAU,CAAC,oEA6BJC,EAAWC,GACtBf,KAAKf,MAAM+B,aAAeF,EAAUE,YACH,IAAjChB,KAAKf,MAAM+B,WAAWC,SAGtBjB,KAAKU,OAASV,KAAKf,MAAM+B,WAAW,GAAGE,UAAUC,MAAMC,IAAIC,MAAM,GACjErB,KAAKW,OAASX,KAAKf,MAAM+B,WAAW,GAAGE,UAAUC,MAAMC,IAAIC,MAAM,EAAG,GAEpEf,OAAOC,MAAMe,MAAMtB,KAAKI,MAEpBJ,KAAKK,OACLL,KAAKK,MAAMkB,WAIfvB,KAAKf,MAAMuC,YAAgBV,EAAUU,2CAMtC5C,GACHA,EAAIC,qDAGIM,GACRa,KAAKf,MAAMN,OAAX,GAAA8C,OAAqBtC,EAAM+B,UAAUQ,KAArC,MAAAD,OACItC,EAAM+B,UAAUS,cACpB3B,KAAKf,MAAMS,gBAEZM,KAAKf,MAAM2C,cAAczC,EAAM+B,UAAUQ,KAAMvC,EAAM+B,UAAUS,YAC3D,OAEH3B,KAAKf,MAAM4C,mBAAmB1C,EAAM+B,UAAUQ,KAC1CvC,EAAM+B,UAAUS,8CAKhB,IAAAG,EAAA9B,KAEyB,KAA3BA,KAAKf,MAAMuC,aAAiD,KAA3BxB,KAAKf,MAAMiB,cAC3CF,KAAKf,MAAM2C,cAAc5B,KAAKf,MAAMiB,YAAYC,KAC5CH,KAAKf,MAAMiB,YAAY6B,QAAS,OAEpC/B,KAAKf,MAAM4C,mBAAmB7B,KAAKf,MAAMiB,YAAYC,KACjDH,KAAKf,MAAMiB,YAAY6B,UAE9B,IAAIvC,EAAc,KAEdA,EADwB,KAA3BQ,KAAKf,MAAMiB,YACG,GAAAuB,OAAMzB,KAAKf,MAAMiB,YAAYC,KAA7B,MAAAsB,OACXzB,KAAKf,MAAMiB,YAAY6B,SAA0B,SAEvD,IAAIC,EAAO,KAoCT,OA/BEA,EAH+B,KAA1BhC,KAAKf,MAAM+B,YAAsD,IAAjChB,KAAKf,MAAM+B,WAAWC,OAKvDgB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAQ,oBACnBrC,KAAKf,MAAM+B,WAAWsB,IAAI,SAACnD,EAAOoD,GAC9B,OAAON,EAAAC,EAAAC,cAAA,MAAIK,IAAKD,EACLH,UAAWC,IAAQ,qBACnBI,QAAS,kBAAIX,EAAKY,YAAYvD,KAFlC,GAAAsC,OAGCtC,EAAM+B,UAAUQ,KAHjB,MAAAD,OAG0BtC,EAAM+B,UAAUS,iBAKzDM,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ,oBAAqBM,GAAG,SAIjB,IAA/B3C,KAAKf,MAAM+B,WAAWC,QAAwC,KAA1BjB,KAAKf,MAAM+B,WAE7CiB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAQ,oBACnBJ,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAQ,sBAAvB,eAMH,KAKbJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAQ,uBACzBO,SAAU5C,KAAK6C,QACXZ,EAAAC,EAAAC,cAAA,SAAOC,UAAWC,IAAQ,sBACnBS,SAAU9C,KAAKrB,OACfQ,MAAOa,KAAKf,MAAMO,YAClBuD,YAAavD,EACbwD,KAAK,UAIXhB,UAjJIiB,aA+KVC,cAvBS,SAAAC,GACpB,MAAM,CACF3D,YAAa2D,EAAMC,QAAQ5D,YAC3BU,YAAaiD,EAAMC,QAAQlD,YAC3BsB,YAAa2B,EAAMC,QAAQ5B,YAC3BR,WAAYmC,EAAMC,QAAQpC,WAC1BqC,aAAcF,EAAMC,QAAQC,eAKT,SAACC,GAAD,MAAa,CACpC3E,OAAQ,SAAC4E,GAAD,OAAQD,ECtJC,SAACC,GAAD,OAAS,SAACD,GAE3BA,EAAS,CACLN,KCtBoB,eDuBpBxD,YAAa+D,KDkJQ5E,CAAO4E,KAChCtD,eAAgB,kBAAIqD,EC9IU,SAACA,GAC/BE,MAAM,yBACDpE,KAAK,SAACqE,GACH,OAAOA,EAAIC,SAEdtE,KAAK,SAACmE,GACHD,EAAS,CACLN,KClCW,cDmCX9C,YAAaqD,EACb/D,YAAa+D,MAGpB5D,MAAM,SAACC,GACJC,QAAQC,IAAIF,QDkIpBH,UAAW,SAACU,GAAD,OAAQmD,EC5KE,SAACnD,GAAD,OAAS,SAAAmD,GAI9BE,MAFY,2FACMrD,EAAO,yCAEpBf,KAAK,SAACqE,GACH,OAAOA,EAAIC,SAEdtE,KAAK,SAACmE,GACFD,EAAS,CACNN,KCXa,gBDYbhC,WAAYuC,EAAKI,aAIxBhE,MAAM,SAACC,GACJC,QAAQC,IAAIF,MD4JQH,CAAUU,KACtCyB,cAAe,SAACzB,EAAM4B,EAAS6B,GAAhB,OAA8BN,EG7KvB,SAACnD,EAAM4B,EAAS6B,GAAhB,OAA+B,SAAAN,GAMrDE,MAJY,qDACArD,EAAO,IAAM4B,EAAU,2EAI9B3C,KAAK,SAACqE,GAEH,OAAOA,EAAIC,SAEdtE,KAAK,SAACmE,GAECD,EAAS,CAACN,KDfE,eCgBRxB,YAAa+B,MAGxB5D,MAAM,SAACC,GACJC,QAAQC,IAAIF,MH2JkCiE,CAAW1D,EAAM4B,KAEvErC,cAAe,kBAAI4D,EAAS,CAACN,KE/KN,iBFgLvBnB,mBAAoB,SAAC1B,EAAM4B,GAAP,OAAiBuB,EG1JP,SAACnD,EAAM4B,GAAP,OAAkB,SAAAuB,GAKhDE,MAJY,uDACArD,EAAO,IAAM4B,EAAU,2EAI9B3C,KAAK,SAACqE,GAEH,OAAOA,EAAIC,SAEdtE,KAAK,SAACmE,GAEHD,EAAS,CAACN,KD/BO,gBCgCdK,aAAcE,MAKpB5D,MAAM,SAACC,GACJC,QAAQC,IAAIF,MHuI0BiC,CAAmB1B,EAAM4B,OAK5DmB,CAA8CxE,GIxK9CoF,EAVA,WAEP,OACI7B,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAQ9D,cAAvB,WACA0D,EAAAC,EAAAC,cAAC4B,EAAD,wDCgIDb,cANO,SAAAC,GAClB,MAAM,CACFE,aAAcF,EAAMC,QAAQC,eAIrBH,CApIC,SAAAc,GAAkB,IAAhBX,EAAgBW,EAAhBX,aACRY,EAAQ,WAEV,IAAMC,EAAa,SAACC,GAChB,OAAQA,GACJ,KAAK,EACF,MAAO,CAACC,WAAY,WACvB,KAAK,EACD,MAAO,CAACA,WAAY,WACxB,KAAK,EACD,MAAO,CAACA,WAAY,WACxB,KAAK,EACD,MAAO,CAACA,WAAY,WACxB,KAAK,EACD,MAAO,CAACA,WAAY,aAK1BC,EAAc,SAACF,GACjB,OAAQA,GACJ,KAAK,EACD,MAAO,CAACG,UAAa,kBACjBF,WAAY,WACpB,KAAK,EACD,MAAO,CAACE,UAAa,kBACrBF,WAAY,WAChB,KAAK,EACD,MAAO,CAACE,UAAa,kBACrBF,WAAY,WAChB,KAAK,EACD,MAAO,CAACE,UAAa,kBACrBF,WAAY,WAChB,KAAK,EACD,MAAO,CAACE,UAAW,UACfF,WAAY,aAMtBG,EAAS,SAACC,GAER,IAAMrF,EAAQqF,EAAYD,OAAOE,IACjC,QAAQ,GACJ,KAAKtF,EAAQ,GAAKA,EAAQ,GACtB,MAAO,MACX,KAAKA,EAAQ,IAAMA,EAAQ,GACvB,MAAO,uBACX,KAAKA,EAAQ,GAEb,QAAS,MAAO,UAK5B,GAAqB,KAAjBkE,GAAuBA,EAAaA,aAAarB,KAAK,CACtD,IAAMuB,EAAK,SAACmB,EAAaC,GAAd,OAAwB,IAAIC,KAAKC,eACxC,QAASF,GAAQA,OAAOD,IAC5B,OAAOrB,EAAaA,aAAarB,KAAK8C,OAAO,SAAC3F,EAAMoD,EAAGwC,GAErD,GACmC,aAA/B5F,EAAM6F,OAAOC,UAAU,KAC3B9F,EAAM6F,OAAOC,UAAU,EAAG,MAAQ1B,EAAK,IAAI2B,KACvC,CAACC,IAAK,YACN,OAAOhG,IAEXmD,IAAI,SAACnD,EAAOoD,GACX,OACIN,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO,QAAaG,IAAKrD,EAAMiG,GAC/CC,MAAOnB,EAAY3B,IACfN,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ,YACxBgD,MAAOhB,EAAa9B,IACfgB,EAAK,IAAI2B,KAAK/F,EAAM6F,QACjB,CAACM,QAAS,WAElBrD,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO,aAClBlD,EAAM1C,KAAK8I,KAAKC,QAAQ,GAD7B,SAEIvD,EAAAC,EAAAC,cAAA,OACIsD,MAAM,6BACNC,WAAW,+BACXtD,UAAWC,IAAQ,gBAEnBJ,EAAAC,EAAAC,cAAA,OAAKwD,UAAS,GAAAlE,OAAKmE,IAAL,KAAAnE,OAAY8C,EAAOpF,IAAU0G,KAAK,cAGxD5D,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ,sBACpBJ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ,iBACnBlD,EAAM2G,KAAKC,MADhB,OAEI9D,EAAAC,EAAAC,cAAA,OACIsD,MAAM,6BACNC,WAAW,+BACXtD,UAAWC,IAAQ,uBAEnBJ,EAAAC,EAAAC,cAAA,OAAKwD,UAAS,GAAAlE,OAAKmE,IAAL,SAAiBC,KAAK,cAG5C5D,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ,qBACnBlD,EAAM1C,KAAKuJ,SADhB,KAEI/D,EAAAC,EAAAC,cAAA,OACIsD,MAAM,6BACNC,WAAW,+BACXtD,UAAWC,IAAQ,2BACnBJ,EAAAC,EAAAC,cAAA,OAAKwD,UAAS,GAAAlE,OAAKmE,IAAL,aAAqBC,KAAK,kBAQ7D,OAAO5D,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQhE,UAIjC2D,EAAOiC,IAAYA,IAAY,KAGvC,OACIhC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ1E,UACnBqE,KCEEkB,cATS,SAAAC,GACpB,MAAM,CAEF3B,YAAa2B,EAAMC,QAAQ5B,YAC3B6B,aAAcF,EAAMC,QAAQC,eAKrBH,CAxHH,SAAAc,GAA+B,IAA7BxC,EAA6BwC,EAA7BxC,YACRyE,GADqCjC,EAAhBX,aACX,SAAC6C,GACb,OAAQA,GACJ,IAAK,UACD,OAAO,IAAItB,KAAKC,eAAe,QAC3B,CAACS,QAAS,SAASX,OAAO,IAAIO,MACtC,IAAK,QACD,OAAO,IAAIN,KAAKC,eAAe,QAC3B,CAACsB,MAAO,UAAUxB,OAAO,IAAIO,MACrC,IAAK,MACD,OAAO,IAAIN,KAAKC,eAAe,QAC3B,CAACM,IAAK,YAAYR,OAAO,IAAIO,SAMvCrB,EAAa,SAACuC,GAEhB,GAAoB,KAAhB5E,GAA0C,QAApBA,EAAY6E,IAYhC,MAAO,iBAXT,OAAQD,GACJ,IAAK,OACD,OAAQ5E,EAAY/E,KAAK8I,KAAMC,QAAQ,GAC3C,IAAK,OACD,OAAOhE,EAAYsE,KAAKC,MAC5B,IAAK,WACD,OAAQvE,EAAYE,KACxB,IAAK,WACD,OAAOF,EAAY/E,KAAKuJ,WA6BxC,OACQ/D,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAQ5F,MACrBwF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ,sBACpBJ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ,mBACnB4D,EAAQ,YAEbhE,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO,mBAClBwB,EAAW,QADhB,SAEI5B,EAAAC,EAAAC,cAAA,OACIsD,MAAM,6BACNC,WAAW,+BACXtD,UAAWC,IAAQ,0BAEnBJ,EAAAC,EAAAC,cAAA,OAAKwD,UAAS,GAAAlE,OAAKmE,IAAL,KAAAnE,OA7BvB,WAEP,GAAoB,KAAhBD,GAA0C,QAApBA,EAAY6E,IAAc,CAChD,IAAMlH,EAAQqC,EAAY+C,OAAOE,IAClC,QAAQ,GACH,KAAKtF,EAAQ,GAAKA,EAAQ,GACtB,MAAO,MACX,KAAKA,EAAQ,IAAMA,EAAQ,GACvB,MAAO,uBACX,KAAKA,EAAQ,GAEd,QAAS,MAAO,UAkBmBoF,IAAYsB,KAAK,cAGnD5D,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ,uCACpBJ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ,2BAAxB,GAAAZ,OACQoC,EAAW,QADnB,QAEI5B,EAAAC,EAAAC,cAAA,OACIsD,MAAM,6BACNC,WAAW,+BACXtD,UAAWC,IAAQ,iCAEnBJ,EAAAC,EAAAC,cAAA,OAAKwD,UAAS,GAAAlE,OAAKmE,IAAL,SAAiBC,KAAK,cAG5C5D,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ,2BACnBwB,EAAW,aAEhB5B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ,+BAAxB,GAAAZ,OACQoC,EAAW,YADnB,KAEI5B,EAAAC,EAAAC,cAAA,OACIsD,MAAM,6BACNC,WAAW,+BACXtD,UAAWC,IAAQ,qCACnBJ,EAAAC,EAAAC,cAAA,OAAKwD,UAAS,GAAAlE,OAAKmE,IAAL,aAAqBC,KAAK,cAGhD5D,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ,0BAAxB,GAAAZ,OACQwE,EAAQ,SADhB,KAAAxE,OAC4BwE,EACpB,WAKhBhE,EAAAC,EAAAC,cAACmE,EAAD,0BCrFG5I,EAtBA,WACX,OACIuE,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQhF,WACpB4E,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ/E,QAAxB,cAEI2E,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAQ9E,KACnBgJ,KAAK,wDADR,gBAKJtE,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ7E,QAAxB,eAEIyE,EAAAC,EAAAC,cAAA,KAAGoE,KAAK,6BAA6BnE,UAAWC,IAAQ9E,MAAxD,gBCQCiJ,mLAbb,OACEvE,EAAAC,EAAAC,cAAA,OAAKC,UAAS,QAAAX,OAAUY,IAAQ5E,OAC5BwE,EAAAC,EAAAC,cAACsE,EAAD,MACAxE,EAAAC,EAAAC,cAACuE,EAAD,MACAzE,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAQ3E,QACvBuE,EAAAC,EAAAC,cAACwE,EAAD,eATI1D,mCCLZ2D,EAAe,CACjBpF,YAAa,GACb6B,aAAc,GACdwD,SAAS,EACT7F,WAAY,GACZxB,YAAa,GACbU,YAAa,ICCX4G,EAAcC,YAAgB,CAChC3D,QDCmB,WAAgC,IAA/BD,EAA+B6D,UAAA/F,OAAA,QAAAgG,IAAAD,UAAA,GAAAA,UAAA,GAAvBJ,EAAcM,EAASF,UAAA/F,OAAA,EAAA+F,UAAA,QAAAC,EAEnD,OAAQC,EAAOlE,MACX,IPdoB,eOepB,OAAOmE,OAAAC,EAAA,EAAAD,CAAA,GACAhE,EADP,CAEI0D,SAAS,EACTrF,YAAa0F,EAAO1F,cAExB,IPfqB,gBOgBjB,OAAA2F,OAAAC,EAAA,EAAAD,CAAA,GACOhE,EADP,CAEIE,aAAc6D,IAEtB,IPxBqB,gBOyBjB,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFhE,EADL,CAEEnC,WAAYkG,EAAOlG,WAAWqG,oBAAoBC,gBAExD,IP5BmB,cO6Bf,OAAAH,OAAAC,EAAA,EAAAD,CAAA,GACKhE,EADL,CAEEnC,WAAY,KAElB,IPhCoB,eOiChB,OAAAmG,OAAAC,EAAA,EAAAD,CAAA,GACOhE,EADP,CAEI3D,YAAa0H,EAAO1H,cAE5B,IPpCmB,cOqCf,OAAA2H,OAAAC,EAAA,EAAAD,CAAA,GACKhE,EADL,CAEIjD,YAAagH,EAAOhH,cAG5B,QAAS,OAAAiH,OAAAC,EAAA,EAAAD,CAAA,GAAUhE,OCjCrBoE,EAAmBjH,OAAOkH,sCAAwCC,IAElEC,EAAQC,YAAYb,EAAaS,EAAiBK,YAAgBC,OAElEC,EACF7F,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAUL,MAAOA,GACbzF,EAAAC,EAAAC,cAAC6F,EAAD,OAKRC,IAASC,OAAOJ,EAAKK,SAASC,eAAe,4BCvB7C7L,EAAAC,QAAA,CAAkB6L,sBAAA,wCAAAC,qBAAA,uCAAAC,kBAAA,oCAAAC,oBAAA,sCAAAC,mBAAA","file":"static/js/main.c6562b8a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__1rH-M\",\"main__weather-now\":\"main_main__weather-now__24K4q\",\"main__day-week\":\"main_main__day-week__114-y\",\"main__temperature\":\"main_main__temperature__2yMnz\",\"main__weather-now-svg\":\"main_main__weather-now-svg__F0DIG\",\"main__weather-now-header-container\":\"main_main__weather-now-header-container__3Nsk5\",\"main__weather-now-wind\":\"main_main__weather-now-wind__1yw2x\",\"main__weather-now-svg---wind\":\"main_main__weather-now-svg---wind__2TkPx\",\"main__weather-now-city\":\"main_main__weather-now-city__2C75A\",\"main__weather-now-humidity\":\"main_main__weather-now-humidity__KE3fJ\",\"main__weather-now-svg---humidity\":\"main_main__weather-now-svg---humidity__l15tB\",\"main__weather-now-day\":\"main_main__weather-now-day__3y8oA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"footer_container__p56om\",\"design\":\"footer_design__2fc71\",\"link\":\"footer_link__4tYEd\",\"author\":\"footer_author__3yb6s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"App_body__2JlO3\",\"footer\":\"App_footer__3wnWY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forecast\":\"forecast_forecast__22um3\",\"weather\":\"forecast_weather__2Hk42\",\"day-week\":\"forecast_day-week__30vbg\",\"temperature\":\"forecast_temperature__1vTeq\",\"weather-container\":\"forecast_weather-container__2XZNa\",\"weather-svg\":\"forecast_weather-svg__3KuKW\",\"weather-wind\":\"forecast_weather-wind__b-vpR\",\"weather-svg---wind\":\"forecast_weather-svg---wind__2qtRe\",\"weather-humidity\":\"forecast_weather-humidity__19_TZ\",\"weather-svg---humidity\":\"forecast_weather-svg---humidity__2EHh2\",\"loader\":\"forecast_loader__1kfwO\",\"lds-dual-ring\":\"forecast_lds-dual-ring__c5SSb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__logo\":\"header_header__logo__11A1M\"};","module.exports = __webpack_public_path__ + \"static/media/sprite.symbol.08787329.svg\";","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport {search, getGeolocation, getCities} from \"../../../actions\";\nimport {getWeather, getWeatherForecast} from \"../../../actions/actionsWeather\";\nimport classes from './formSearch.module.css';\nimport {CITIES_NULL} from \"../../../actions/actionTypes\";\n\nclass FormSearch extends Component{\n\n    componentDidMount() {\n        //get location\n      this.props.getGeolocation();\n\n      if (this.props.geolocation !== ''){\n          console.log(this,this.props.geolocation.city)\n      }\n\n           //init map\n        this.init=()=>{\n            this.myMap =  new window.ymaps.Map('map', {\n                center: [this.coordX, this.coordY],\n                zoom: 7,\n                controls: ['geolocationControl']\n            });\n\n        };\n        }\n\n\n    search = (evt)=>{\n        evt.preventDefault();\n\n       const prom = new Promise(resolve => {\n           resolve(this.props.search(evt.target.value))});\n           prom.then(()=>{\n\n           clearTimeout(this.deb);\n           this.deb = setTimeout(()=>{\n\n               (this.props.searchValue) ? this.props.getCities(this.props.searchValue)\n                   : this.props.getCitiesNull();\n\n\n           }, 500)\n       })\n           .catch((err)=>{\n               console.log(err)\n           })\n    };\n\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.searchCity !== prevProps.searchCity &&\n            this.props.searchCity.length !== 0){\n\n            //map coordinates\n            this.coordX = this.props.searchCity[0].GeoObject.Point.pos.slice(9);\n            this.coordY = this.props.searchCity[0].GeoObject.Point.pos.slice(0, 9);\n            //load map\n            window.ymaps.ready(this.init);\n\n            if (this.myMap){\n                this.myMap.destroy()\n            }\n        }\n\n        if (this.props.listWeather !== prevProps.listWeather){\n\n        }\n\n    }\n\n    submit(evt){\n        evt.preventDefault();\n    }\n\n    onclickList(value){\n        this.props.search(`${value.GeoObject.name}, ${\n            value.GeoObject.description}`);\n        this.props.getCitiesNull();\n\n       this.props.getWeatherNow(value.GeoObject.name, value.GeoObject.description,\n           'now');\n\n        this.props.getWeatherForecast(value.GeoObject.name,\n            value.GeoObject.description)\n\n\n    }\n\n    render(){\n        //call weather\n       if(this.props.listWeather === '' && this.props.geolocation !== ''){\n           this.props.getWeatherNow(this.props.geolocation.city,\n               this.props.geolocation.country, 'now');\n\n           this.props.getWeatherForecast(this.props.geolocation.city,\n               this.props.geolocation.country)\n       }\n        let searchValue = null;\n        (this.props.geolocation !== '') ?\n            searchValue = `${this.props.geolocation.city}, ${\n            this.props.geolocation.country}` : searchValue = 'search' ;\n\n      let list = null;\n\n            if(this.props.searchCity !== '' && this.props.searchCity.length !== 0) {\n\n\n          list =(\n\n              <div>\n                  <ul className={classes[\"header__form-ul\"]}>{\n                      this.props.searchCity.map((value, i) => {\n                          return <li key={i}\n                                     className={classes[\"header__form-list\"]}\n                                     onClick={()=>this.onclickList(value)}>\n                              {`${value.GeoObject.name}, ${value.GeoObject.description}`}\n                          </li>\n                      })\n                  }</ul>\n\n                  <div className={classes[\"header__form-map\"]} id=\"map\"></div>\n              </div>\n          )\n\n        }else if (this.props.searchCity.length===0 && this.props.searchCity !== ''){\n                list= (\n                    <div>\n                        <ul className={classes[\"header__form-ul\"]}>\n                            <li className={classes[\"header__form-list\"]}>\n                            not found\n                            </li>\n                        </ul>\n                    </div>)\n            }\n            else {list = null;\n            }\n\n\n        return(\n            <div>\n                <form className={classes[\"header__form-search\"]}\n                onSubmit={this.submit}>\n                    <input className={classes[\"header__form-input\"]}\n                           onChange={this.search}\n                           value={this.props.searchValue}\n                           placeholder={searchValue}\n                           type=\"text\"\n                    />\n                </form>\n\n                    {list}\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state =>{\n    return{\n        searchValue: state.reducer.searchValue,\n        geolocation: state.reducer.geolocation,\n        listWeather: state.reducer.listWeather,\n        searchCity: state.reducer.searchCity,\n        listForecast: state.reducer.listForecast\n    }\n\n};\n\nconst mapDispatchToProps = (dispatch)=>({\n    search: (data)=>dispatch(search(data)),\n    getGeolocation: ()=>dispatch(getGeolocation()),\n    getCities: (city)=>dispatch(getCities(city)),\n    getWeatherNow: (city, country, typeWeather)=>dispatch(getWeather(city, country,\n        typeWeather)),\n    getCitiesNull: ()=>dispatch({type: CITIES_NULL}),\n    getWeatherForecast: (city, country)=>dispatch(getWeatherForecast(city, country))\n});\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps) (FormSearch);","import {CITIES_SEARCH, GEOLOCATION, LIST_WEATHER, SEARCH_VALUE} from \"./actionTypes\";\n\nexport const getCities = (city)=> dispatch=>{\n    const apiKey = '256272e7-641a-4b6f-b591-57f67ef723a3';\n    const url = 'https://geocode-maps.yandex.ru/1.x/?apikey=' + apiKey +\n        '&geocode=' + city + '&kind=locality&lang=en_US&format=json';\n    fetch(url)\n        .then((res)=>{\n            return res.json()\n        })\n        .then((data)=>{\n             dispatch({\n                type: CITIES_SEARCH,\n                searchCity: data.response\n\n            })\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n};\n\nexport const search =(data)=> (dispatch) =>{\n\n    dispatch({\n        type: SEARCH_VALUE,\n        searchValue: data\n\n    })\n};\n\nexport const getGeolocation = ()=>(dispatch)=>{\n    fetch('https://ipapi.co/json')\n        .then((res)=>{\n            return res.json()\n        })\n        .then((data)=>{\n            dispatch({\n                type: GEOLOCATION,\n                geolocation: data,\n                searchValue: data\n            })\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n};","export const LIST_WEATHER = 'LIST_WEATHER';\nexport const CITIES_SEARCH = 'CITIES_SEARCH';\nexport const CITIES_NULL = 'CITIES_NULL';\nexport const SEARCH_VALUE = 'SEARCH_VALUE';\nexport const GEOLOCATION = 'GEOLOCATION';\nexport const LIST_FORECAST = 'LIST_FORECAST';","import {LIST_FORECAST, LIST_WEATHER} from \"./actionTypes\";\n\nexport const getWeather = (city, country, typeWeather)=> dispatch=>{\n\n    const url = 'https://api.openweathermap.org/data/2.5/weather' +\n        '?q=' + city + ',' + country + '&units=metric&&lang=en&mode=json' +\n        '&APPID=6c32be7c80652742598856ff94eefdc9';\n\n    fetch(url)\n        .then((res)=>{\n\n            return res.json()\n        })\n        .then((data)=>{\n\n                dispatch({type: LIST_WEATHER,\n                    listWeather: data});\n\n        })\n        .catch((err)=>{\n            console.log(err);\n        })\n};\n\nexport const getWeatherForecast = (city, country)=> dispatch=>{\n    const url = 'https://api.openweathermap.org/data/2.5/forecast/' +\n        '?q=' + city + ',' + country + '&units=metric&&lang=en&mode=json' +\n        '&APPID=6c32be7c80652742598856ff94eefdc9';\n\n    fetch(url)\n        .then((res)=>{\n\n            return res.json()\n        })\n        .then((data)=>{\n\n            dispatch({type: LIST_FORECAST,\n               listForecast: data});\n\n\n\n        })\n        .catch((err)=>{\n            console.log(err);\n        })\n};","import React from 'react';\n\nimport classes from './header.module.css';\nimport FormSearch from './formSearch/formSearch';\n\nconst header = ()=>{\n\n        return(\n            <header>\n                <h1 className={classes.header__logo}>Weather</h1>\n                <FormSearch/>\n            </header>\n        );\n};\n\nexport default header;","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport classes from \"./forecast.module.css\";\nimport svg from \"../image/sprite.symbol.svg\";\n\nconst forecast =({listForecast})=>{\n    const getData=()=>{\n\n        const changeColor =(index)=>{\n            switch (index) {\n                case 0:\n                   return {background: '#a8cfc2'};\n                case 1:\n                    return {background: '#7da8ab'};\n                case 2:\n                    return {background: '#4f6c7c'};\n                case 3:\n                    return {background: '#2c4357'};\n                case 4:\n                    return {background: '#203140'}\n\n            }\n        };\n\n        const changeShadow =(index)=>{\n            switch (index) {\n                case 0:\n                    return {'boxShadow': '0 5px 0 #99bcb1',\n                        background: '#bbe6d8'};\n                case 1:\n                    return {'boxShadow': '0 5px 0 #72999c',\n                    background: '#8ebfc2'};\n                case 2:\n                    return {'boxShadow': '0 5px 0 #486271',\n                    background: '#5e8093'};\n                case 3:\n                    return {'boxShadow': '0 5px 0 #283d4f',\n                    background: '#38556e'};\n                case 4:\n                    return {boxShadow: '#1d2d3a',\n                        background: '#2c4357'\n                    }\n            }\n\n        };\n\n        const clouds = (valueClouds)=>{\n\n                const value = valueClouds.clouds.all;\n                switch (true) {\n                    case value > 0 && value < 30:\n                        return 'sun';\n                    case value > 30 && value < 60:\n                        return 'partiallyСloudy';\n                    case value > 60:\n                        return 'cloud';\n                    default: return 'cloud';\n                }\n        };\n\n\n        if (listForecast !== '' && listForecast.listForecast.list){\n            const data=(currentData, format) =>new Intl.DateTimeFormat(\n                'en-US', format).format(currentData);\n            return listForecast.listForecast.list.filter((value,i, arr)=>{\n\n              if (\n                  value.dt_txt.substring(11) === '15:00:00' &&\n              value.dt_txt.substring(8, 10) !== data(new Date(),\n                  {day: 'numeric'})){\n                  return value\n              }\n           }).map((value, i)=>{\n               return(\n                   <div className={classes[\"weather\"]} key={value.dt}\n                   style={changeColor(i)}>\n                       <div className={classes[\"day-week\"]}\n                       style={changeShadow(i)}>\n                           {data(new Date(value.dt_txt),\n                               {weekday: 'short'})}\n                       </div>\n                       <div className={classes[\"temperature\"]}>\n                           {value.main.temp.toFixed(1)}&#8451;\n                           <svg\n                               xmlns=\"http://www.w3.org/2000/svg\"\n                               xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                               className={classes[\"weather-svg\"]}\n                           >\n                               <use xlinkHref={`${svg}#${clouds(value)}`} fill=\"#e4ffdd\"/>\n                           </svg>\n                       </div>\n                       <div className={classes[\"weather-container\"]}>\n                           <div className={classes[\"weather-wind\"]}>\n                               {value.wind.speed} m/s\n                               <svg\n                                   xmlns=\"http://www.w3.org/2000/svg\"\n                                   xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                                   className={classes[\"weather-svg---wind\"]}\n                               >\n                                   <use xlinkHref={`${svg}#wind`} fill=\"#e4ffdd\"/>\n                               </svg>\n                           </div>\n                           <div className={classes[\"weather-humidity\"]}>\n                               {value.main.humidity} %\n                               <svg\n                                   xmlns=\"http://www.w3.org/2000/svg\"\n                                   xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                                   className={classes[\"weather-svg---humidity\"]}>\n                                   <use xlinkHref={`${svg}#humidity`} fill=\"#e4ffdd\"/>\n                               </svg>\n                           </div>\n                       </div>\n                   </div>\n               )\n          });\n\n        }else return <div className={classes.loader}></div>\n\n    };\n\n      const list = getData() ? getData() : null;\n\n\n    return(\n        <div className={classes.forecast}>\n            {list}\n        </div>\n    )\n\n};\n\nconst mapStateToProps=state=>{\n    return{\n        listForecast: state.reducer.listForecast\n    }\n};\n\nexport default connect(mapStateToProps) (forecast);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport classes from './main.module.css';\nimport svg from './image/sprite.symbol.svg';\nimport Forecast from './forecast/forecast';\n\n\nconst main =({listWeather, listForecast})=>{\nconst getDate = (dataType)=>{\n    switch (dataType) {\n        case 'dayWeek':\n            return new Intl.DateTimeFormat('en-US',\n                {weekday: 'long'}).format(new Date());\n        case 'month':\n            return new Intl.DateTimeFormat('en-US',\n                {month: 'short'}).format(new Date());\n        case 'day':\n            return new Intl.DateTimeFormat('en-US',\n                {day: 'numeric'}).format(new Date());\n\n    }\n\n};\n\nconst getWeather = (swithValue)=>{\n\n    if (listWeather !== '' && listWeather.cod !== '404'){\n        switch (swithValue) {\n            case 'temp':\n                return (listWeather.main.temp).toFixed(1);\n            case 'wind':\n                return listWeather.wind.speed;\n            case 'cityName':\n                return (listWeather.name);\n            case 'humidity':\n                return listWeather.main.humidity\n        }\n\n    }else return 'city not found';\n\n};\n\nconst test =()=>{\n    if (listForecast !== ''){\n        console.log(listForecast.listForecast)\n    }\n};\n\nconst clouds = ()=>{\n\n        if (listWeather !== '' && listWeather.cod !== '404'){\n            const value = listWeather.clouds.all;\n           switch (true) {\n                case value > 0 && value < 30:\n                    return 'sun';\n                case value > 30 && value < 60:\n                    return 'partiallyСloudy';\n                case value > 60:\n                    return 'cloud';\n               default: return 'cloud';\n            }\n        }\n    };\n\nreturn(\n        <main className={classes.main}>\n            <div className={classes[\"main__weather-now\"]}>\n                <div className={classes[\"main__day-week\"]}>\n                    {getDate('dayWeek')}\n                </div>\n                <div className={classes[\"main__temperature\"]}>\n                    {getWeather('temp')}&#8451;\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                        className={classes[\"main__weather-now-svg\"]}\n                    >\n                        <use xlinkHref={`${svg}#${clouds()}`} fill=\"#5e8093\"/>\n                    </svg>\n                </div>\n                <div className={classes[\"main__weather-now-header-container\"]}>\n                    <div className={classes[\"main__weather-now-wind\"]}>\n                        {`${getWeather('wind')} m/s`}\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                            className={classes[\"main__weather-now-svg---wind\"]}\n                        >\n                            <use xlinkHref={`${svg}#wind`} fill=\"#5e8093\"/>\n                        </svg>\n                    </div>\n                    <div className={classes[\"main__weather-now-city\"]}>\n                        {getWeather('cityName')}\n                    </div>\n                    <div className={classes[\"main__weather-now-humidity\"]}>\n                        {`${getWeather('humidity')}%`}\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                            className={classes[\"main__weather-now-svg---humidity\"]}>\n                            <use xlinkHref={`${svg}#humidity`} fill=\"#5e8093\"/>\n                        </svg>\n                    </div>\n                    <div className={classes[\"main__weather-now-day\"]}>\n                        {`${getDate('month')} ${getDate(\n                            'day')}`}\n                    </div>\n\n                </div>\n            </div>\n            <Forecast/>\n\n\n        </main>\n    );\n};\n\n\nconst mapStateToProps = state =>{\n    return{\n\n        listWeather: state.reducer.listWeather,\n        listForecast: state.reducer.listForecast\n    }\n\n};\n\nexport default connect(mapStateToProps) (main);\n\n\n","import React from 'react';\n\nimport classes from './footer.module.css';\n\nconst footer = ()=>{\n    return(\n        <div className={classes.container}>\n            <div className={classes.design}>\n                designed by\n                <a className={classes.link}\n                   href=\"https://www.freepik.com/free-photos-vectors/template\">\n                    freepik.com\n                </a>\n            </div>\n            <div className={classes.author}>\n                developed by\n                <a href=\"https://github.com/dindeni\" className={classes.link}>\n                    D.Lagutin\n                </a>\n            </div>\n        </div>\n\n\n    )\n};\n\nexport default footer;","import React, { Component } from 'react';\n\nimport classes from './App/App.module.css';\nimport Header from \"./components/header/header\";\nimport Main from \"./components/main/main\";\nimport Footer from './components/footer/footer';\n\nclass App extends Component {\n\n    render(){\n\n    return (\n      <div className={`body ${classes.body}`}>\n          <Header/>\n          <Main/>\n          <footer className={classes.footer}>\n              <Footer/>\n          </footer>\n      </div>\n    );\n  }\n}\n\n\nexport default  (App);\n","import {CITIES_NULL, CITIES_SEARCH, GEOLOCATION, LIST_WEATHER, SEARCH_VALUE, LIST_FORECAST} from \"../actions/actionTypes\";\n\nconst initialState = {\n    listWeather: '',\n    listForecast: '',\n    loading: false,\n    searchCity: '',\n    searchValue: '',\n    geolocation: ''\n};\n\nexport const reducer = (state = initialState, action)=>{\n\n    switch (action.type){\n        case LIST_WEATHER:\n        return {\n            ...state,\n            loading: true,\n            listWeather: action.listWeather,\n        };\n        case LIST_FORECAST:\n            return{\n                ...state,\n                listForecast: action\n            };\n        case CITIES_SEARCH:\n            return {\n              ...state,\n              searchCity: action.searchCity.GeoObjectCollection.featureMember\n            };\n        case CITIES_NULL:\n            return{\n              ...state,\n              searchCity: ''\n            };\n        case SEARCH_VALUE:\n            return{\n                ...state,\n                searchValue: action.searchValue\n            };\n        case GEOLOCATION:\n            return{\n              ...state,\n                geolocation: action.geolocation,\n                /*searchValue: action.geolocation*/\n            };\n        default: return{...state}\n    }\n\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport {createStore, combineReducers, applyMiddleware, compose} from \"redux\";\nimport thunk from 'redux-thunk';\n\nimport {reducer} from \"./reducers\";\n\nconst rootReducer = combineReducers({\n    reducer: reducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n    <Provider store={store}>\n        <App/>\n    </Provider>\n);\n\n\nReactDOM.render(app, document.getElementById('root'));\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__form-search\":\"formSearch_header__form-search__1z2zw\",\"header__form-input\":\"formSearch_header__form-input__2d4Dc\",\"header__form-ul\":\"formSearch_header__form-ul__2NWRH\",\"header__form-list\":\"formSearch_header__form-list__3VXAh\",\"header__form-map\":\"formSearch_header__form-map__1rUfl\"};"],"sourceRoot":""}