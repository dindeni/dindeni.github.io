{"version":3,"sources":["components/map/map.js","containers/task/task.js","App.js","index.js","containers/task/task.module.css"],"names":["map","props","createMark","geoObj","mark","markStart","coords","forEach","coord","index","window","initMap","geoObjects","add","ymaps","Placemark","balloonContentBody","formValue","draggable","events","evt","get","geometry","getCoordinates","coordEnd","foundIndex","findIndex","el","splice","setCoordinates","Object","toConsumableArray","useEffect","length","setCenter","removeAll","geo","GeoObject","type","coordinates","properties","hasBalloon","ready","Map","center","zoom","controls","react_default","a","createElement","id","style","width","height","margin","Task","state","inputValue","getFormValue","preventDefault","_this","setState","prevState","concat","getInputValue","target","value","onDragStart","dataTransfer","effectAllowed","setData","parentNode","formValueStart","onDragEnter","enter","onDragEnd","filteredItems","filter","filteredCoords","DeleteItem","filteredItem","indexDeletedValue","filtredCoords","place","fetch","then","res","json","data","response","GeoObjectCollection","featureMember","Point","pos","catch","err","console","log","prevProps","_this2","this","val","slice","list","_this3","key","className","styles","taskElement","buttonDelete","onClick","article","onSubmit","name","input","onChange","placeholder","taskElementContainer","components_map_map","Component","App","task","ReactDOM","render","src_App","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3ad96f42.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\n\nconst map = (props) =>{\n\n    const createMark = (geoObj)=>{\n        let mark;\n        let markStart;\n        let coords = props.coords;\n        coords.forEach((coord, index)=>{\n\n            mark = window.initMap.geoObjects.add(\n                new window.ymaps.Placemark(coord,{\n                    balloonContentBody: '<div>'+ props.formValue[index]+'</div>'\n                }, {draggable: true})\n            );\n\n            mark.events.add('dragstart', (evt)=>{\n                //get start coordinates\n                markStart = evt.get('target').geometry.getCoordinates();\n            });\n\n            mark.events.add('dragend', (evt)=>{\n                //get coordinates end\n                const coordEnd = evt.get('target').geometry.getCoordinates();\n                //replacement coordinates\n                const foundIndex = coords.findIndex((el)=>{\n                    return el === markStart\n                });\n                coords.splice(foundIndex, 1, coordEnd);\n                //set changed coordinates\n                geoObj.geometry.setCoordinates([...coords]);\n            });\n\n        });\n    };\n\n    useEffect(()=>{\n\n        if (props.coords.length !== 0){\n            if (!window.initMap){\n                window.ymaps.ready(function () {\n                    window.initMap = new window.ymaps.Map('map', {\n                        center: props.coords[props.coords.length-1],\n                        zoom: 10,\n                        controls: ['geolocationControl']\n                    });\n\n                    const geo = new window.ymaps.GeoObject({\n                        geometry: {\n                            type: \"LineString\",\n                            coordinates:\n                                [...props.coords]\n                        }\n                        ,\n                        properties: {},\n\n                    },{\n                        //options\n                        hasBalloon: true,\n\n                    });\n                    window.initMap.geoObjects.add(geo);\n\n                    createMark(geo)\n            });\n\n        }else {\n                window.initMap.setCenter(props.coords[props.coords.length-1]);\n                window.initMap.geoObjects.removeAll();\n\n\n                const geo = new window.ymaps.GeoObject({\n                    geometry: {\n                        type: \"LineString\",\n                        coordinates:\n                            [...props.coords]\n                    },\n                    properties: {}\n\n                },{\n                    //options\n                    hasBalloon: true,\n\n                });\n\n                window.initMap.geoObjects.add(geo);\n\n                createMark(geo);\n            }\n        }\n    }, [props.coords]);\n\n    return(\n            <div id=\"map\" style={{width: 50+'%',height: 600+'px', margin: 'auto'}}>\n        </div>\n\n    )\n};\n\nexport default map;","import React, {Component} from 'react';\n\nimport styles from './task.module.css';\nimport Map from '../../components/map/map';\n\nclass Task extends Component{\n\n  state = {\n      formValue: [],\n      inputValue: [],\n      coords: []\n};\n\n    getFormValue = (evt)=>{\n        evt.preventDefault();\n        this.setState((prevState)=>{\n           return{\n               formValue: [...prevState.formValue, ...this.state.inputValue]\n           }\n        });\n    };\n\n    getInputValue = (evt)=>{\n        this.setState({inputValue: [evt.target.value]});\n    };\n\n    onDragStart = (evt)=>{\n        evt.dataTransfer.effectAllowed = \"move\";\n        evt.dataTransfer.setData(\"text/html\", evt.target.parentNode);\n        //coords start\n        this.formValueStart = evt.target.value;\n\n    };\n\n    onDragEnter = (evt, index)=>{\n        //index event enter\n        this.enter = index;\n    };\n\n    onDragEnd = ()=>{\n        //filter form value\n        let filteredItems = this.state.formValue.filter((value, index)=>{\n            if (index !== this.formValueStart){\n                return value;\n            }\n        });\n        //enter changed value\n        filteredItems.splice(this.enter, 0,\n            this.state.formValue[this.formValueStart]);\n            this.setState({formValue: filteredItems});\n            //filter coordinates\n            const filteredCoords = this.state.coords.filter((coord, index)=>{\n                if (index !== this.formValueStart){\n                    return coord\n                }\n            });\n            //enter changed coordinates\n            filteredCoords.splice(this.enter, 0, this.state.coords[this.formValueStart]);\n            this.setState({coords: filteredCoords});\n    };\n\n    DeleteItem = (evt)=>{\n        const filteredItem = this.state.formValue.filter((value, index)=>{\n\n            if (value !== evt.target.value){\n                return value\n            } else {\n                this.indexDeletedValue = index;\n                const filtredCoords = this.state.coords.filter((coord, index)=>{\n                    if (index !== this.indexDeletedValue){\n                        return value\n                    }\n                });\n                this.setState({coords: [...filtredCoords]});\n            }\n        });\n        this.setState({formValue: filteredItem});\n\n    };\n\n    getCoordinates(place){\n\n            const apiKey = 'd659a4d9-8abd-480f-a0e6-551e9f5438c0';\n            const url = 'https://geocode-maps.yandex.ru/1.x/?apikey=' + apiKey +\n                '&geocode=' + place + '&kind=locality&lang=en_US&format=json';\n\n            return fetch(url)\n                .then((res)=>{\n                    return res.json()\n                })\n                .then((data)=>{\n                    return data.response.GeoObjectCollection.featureMember[0].\n                        GeoObject.Point.pos\n                })\n                .catch((err)=>{\n                    console.log(err)\n                });\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        //if new data is added get las coordinate\n        if (prevState.formValue.length < this.state.formValue.length){\n            this.getCoordinates(\n                this.state.formValue[this.state.formValue.length-1]).\n            then((val)=>{\n                return this.setState({coords: [...this.state.coords,\n                        [val.slice(9), val.slice(0, 9)]]});\n            });\n        }\n    }\n\n    render() {\n        let list;\n        if (this.state.formValue){\n            list = (\n                this.state.formValue.map((value, index)=>{\n                    return(\n                        <li key={index} value={value} className={styles.taskElement}\n                            draggable onDragStart={(evt)=>this.onDragStart(evt, value)}\n                            onDragEnter={(evt)=>this.onDragEnter(evt, index)}\n                        onDragEnd={(evt)=>this.onDragEnd(evt, index)}>\n                            {value}\n                            <button className={styles.buttonDelete} value={value}\n                                    onClick={this.DeleteItem}>\n                            </button>\n                        </li>\n\n                    )\n                })\n            );\n        }\n\n\n        return(\n            <article className={styles.article}>\n                <section>\n                    <form onSubmit={this.getFormValue}>\n                        <input type=\"text\" name=\"input-task\" className={styles.input}\n                               onChange={this.getInputValue} placeholder=\"add point\"/>\n                    </form>\n                    <ul className={styles.taskElementContainer}>{list}</ul>\n\n                </section>\n                <Map formValue={this.state.formValue}\n                coords={this.state.coords}/>\n            </article>\n\n\n\n        );\n    }\n\n}\nexport default Task;","import React, { Component} from 'react';\n\nimport Task from './containers/task/task';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Task/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskElement\":\"task_taskElement__3aiVA\",\"taskElementContainer\":\"task_taskElementContainer__3I7uC\",\"buttonDelete\":\"task_buttonDelete__1BBTl\",\"input\":\"task_input__2-jYo\",\"article\":\"task_article__1Psqh\"};"],"sourceRoot":""}