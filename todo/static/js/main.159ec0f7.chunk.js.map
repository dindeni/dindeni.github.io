{"version":3,"sources":["components/sidePanel.js","components/mainTableContent.js","components/editTodo.js","components/reducers/reducers.js","components/todo.js","App.js","index.js"],"names":["options","value","label","selectStyles","container","styles","Object","objectSpread","width","padding","height","marginBottom","withStyles","theme","paper","position","appBar","left","h2","form","display","justifyContent","flexDirection","alignItems","paddingTop","input","paddingBottom","formGroup","formControl","button","divButtons","top","divInput","svgIcon","fabProgress","zIndex","progressWrapper","marginLeft","marginRight","right","marginTop","bottom","snackbar","props","_useState","useState","_useState2","slicedToArray","radioButtonsState","setRadioButtonsState","_useState3","_useState4","date","setDate","_useState5","_useState6","selectedOption","_useState7","_useState8","errorInput","setErrorInput","_useState9","_useState10","name","setName","_useState11","_useState12","description","setDescription","_useState13","_useState14","radioValue","setRadioValue","_useState15","_useState16","status","setStatus","_useState17","_useState18","tag","setTag","_useState19","loading","success","show","_useState20","progressState","setProgressState","_useContext","useContext","Context","dispatch","state","_useContext2","dispatchValue","stateValue","_useState21","_useState22","_useState23","_useState24","stateSnackBar","setStateSnackBar","radioButtons","react_default","a","createElement","index_es","row","className","classes","onChange","evt","target","control","snackBar","anchorOrigin","vertical","horizontal","open","close","autoHideDuration","message","progress","color","icons_index_es","size","align","variant","style","type","error","required","helperText","multiline","defaultValue","Date","toISOString","substr","htmlFor","native","inputProps","id","react_select_esm","placeholder","opt","fullWidth","onClick","result","setTimeout","divImportance","tableSell","React","createContext","openIndex","dispatchEdit","stateEdit","_useContext3","dispatchIndex","stateIndex","openMenu","setOpenMenu","setOpenIndex","hover","setHover","indexImpotance","setIndexImportance","buttonsHover","index","aria-label","minHeight","showButtons","table","map","key","onMouseEnter","fab","aria-haspopup","option","handlerClose","onMouseOver","minWidth","onMouseLeave","filter","reducerFormValue","action","concat","toConsumableArray","console","log","reducerEdit","reducerIndex","root","margin","_useReducer","useReducer","_useReducer2","_useReducer3","_useReducer4","_useReducer5","_useReducer6","_useReducer7","_useReducer8","panel","Provider","components_sidePanel","todoEdit","editTodo","react","components_mainTableContent","App","components_todo","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.159ec0f7.chunk.js","sourcesContent":["import React, {useContext, useState} from 'react';\nimport {\n    AppBar, Drawer, Typography, withStyles,\n    TextField, RadioGroup, FormControlLabel, Radio,\n    FormControl, InputLabel, Select, Button, Fab, CircularProgress, Snackbar} from \"@material-ui/core\";\nimport SelectReact from 'react-select';\nimport {List, Description, DateRange, Done, AddAlert, Check, Save} from '@material-ui/icons';\n\nimport {Context} from \"./todo\";\n\nconst styles = theme => ({\n    paper: {\n        width: '40%',\n        padding: '40px 0 60px 0',\n        position: 'relative',\n        height: '60%'\n    },\n    appBar: {\n        width: '40%',\n        left: '0'\n    },\n    h2:{\n        padding: '10px'\n    },\n    form:{\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        alignItems: 'center',\n        paddingTop: '5px'\n    },\n    input: {\n        width: '50%',\n        paddingBottom: '10px'\n    },\n    formGroup:{\n        flexDirection: 'column'\n    },\n    formControl: {\n        width: '50%'\n    },\n    button: {\n        width: '40%',\n\n    },\n    divButtons: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        position: 'fixed',\n        left: '0',\n        width: '40%',\n        top: '62%',\n        paddingBottom: '20px'\n    },\n    divInput: {\n        display: 'flex',\n        width: '100%',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    svgIcon:{\n        width: '30px',\n        /*marginTop: '5px'*/\n    },\n    fabProgress: {\n        position: 'absolute',\n        top: -6,\n        left: -6,\n        zIndex: 1,\n    },\n    progressWrapper: {\n        position: 'absolute',\n        top: '0',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        left: '0',\n        right: '0',\n        width: '20%',\n        marginTop: 'auto',\n        marginBottom: 'auto',\n        bottom: '0',\n        height: '20%',\n    },\n    snackbar: {\n        position: 'absolute',\n        bottom: '0'\n    },\n});\n\nconst options = [\n    { value: 'тег0', label: 'тег0'},\n    { value: 'тег1', label: 'тег1'},\n    { value: 'тег2', label: 'тег2'},\n    { value: 'тег3', label: 'тег3'}\n];\n\nconst selectStyles = {\n    container: (styles)=>{\n        return {\n            ...styles,\n            width: '50%',\n            padding: '10px 0 10px 0',\n            height: '50px',\n            marginBottom: '90px'\n        }\n    }\n};\n\nconst sidePanel = (props)=>{\n\n    const [radioButtonsState, setRadioButtonsState] = useState(false);\n    const [date, setDate]=useState('');\n    const [selectedOption, setSelectedOption] = useState(null);\n    const [errorInput, setErrorInput] = useState(false);\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [radioValue, setRadioValue] = useState('');\n    const [status, setStatus] = useState('');\n    const [tag, setTag] = useState('');\n    const [progressState, setProgressState] = useState({loading: false, success: false, show:false});\n\n    const {state, dispatch} = useContext(Context);\n    const {stateValue, dispatchValue} = useContext(Context);\n    const [formValue, setFormValue] = useState({name: '', description: ''});\n    const [stateSnackBar, setStateSnackBar] = useState(false);\n\n    const getDate = ()=>{\n        return new Date().toISOString().substr(0, 10)\n    };\n\n    let radioButtons = null;\n    if (radioButtonsState){\n        radioButtons = <RadioGroup row={true}\n                                   className={props.classes.formGroup}\n        onChange={(evt)=>setRadioValue(evt.target.value)}>\n            <FormControlLabel value=\"Срочная важная задача\"\n                              control={<Radio />}\n                              label=\"Срочная важная задача\"  />\n            <FormControlLabel value=\"Срочная неважная задача\"\n                              control={<Radio />}\n                              label=\"Срочная неважная задача\" />\n            <FormControlLabel value=\"Не срочная важная задача\"\n                              control={<Radio />}\n                              label=\"Не срочная важная задача\" />\n            <FormControlLabel value=\"Не срочная не важная задача\"\n                              control={<Radio />}\n                              label=\"Не срочная не важная задача\" />\n        </RadioGroup>;\n    }\n   /* let name, description, radioValue, status, tag;*/\n\n    const changeDate = (evt)=>{\n        setDate(evt.target.value);\n        setRadioButtonsState(true);\n    };\n\n    const saveData = ()=>{\n        let result = {name, description, date, radioValue, status, tag};\n        if (!result.name){\n            setErrorInput(true)\n        }else {\n            setErrorInput(false);\n            dispatchValue({type: 'add', name: result.name, description: result.description,\n                date: result.date, radioValue: result.radioValue, status: result.status,\n                tag: result.tag});\n            /*dispatch({type: 'false'})*/\n\n            setProgressState({show: true, loading: true, success: false});\n\n            setTimeout(() => {\n                setProgressState({\n                    loading: false,\n                    success: true,\n                    show: false\n                });\n                dispatch({type: 'false'})\n            }, 2000);\n        }\n\n    };\n\n    const cancel = ()=>{\n        if (stateSnackBar){\n            setStateSnackBar(false);\n            dispatch({type: 'false'})\n        } else setStateSnackBar(true);\n    };\n\n    const snackBar =\n        stateSnackBar ? <div>\n            <Snackbar className={props.classes.snackbar}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n            }}\n            open={stateSnackBar}\n                      close={()=>setStateSnackBar(false)}\n            autoHideDuration={6000}\n            message={\"Данные не сохранены\"}\n\n        >\n        </Snackbar>\n    </div> : null;\n\n    const progress = progressState.show ? <div className={props.classes.progressWrapper}>\n        <Fab color=\"primary\">\n            {progressState.success ? <Check /> : <Save />}\n        </Fab>\n        {progressState.loading && <CircularProgress size={68} className={props.classes.fabProgress} />}\n    </div> : null;\n\n    return(\n        <Drawer open={true} classes={{paper: props.classes.paper}}>\n            <AppBar color=\"primary\" className={props.classes.appBar}>\n                    <Typography color=\"inherit\" align='center'\n                                variant='title' className={props.classes.h2}>\n                        Новая задача\n                    </Typography>\n            </AppBar>\n            <form className={props.classes.form}>\n                <div className={props.classes.divInput}>\n                    <List className={props.classes.svgIcon} style={{marginTop: '10px'}}/>\n                    <TextField label='Название' type='text'\n                               className={props.classes.input}\n                               onChange={(evt)=>setName(evt.target.value)}\n                    error={errorInput} required={true}\n                               helperText={errorInput ? 'Обязательное поле' :\n                               ''}>\n\n                    </TextField>\n                </div>\n                <div className={props.classes.divInput}>\n                    <Description className={props.classes.svgIcon}/>\n                    <TextField label='Описание задачи' type='text'\n                               className={props.classes.input}\n                               multiline={true} onChange={(evt)=>setDescription(evt.target.value)}>\n                    </TextField>\n                </div>\n                <div className={props.classes.divInput}>\n                    <DateRange className={props.classes.svgIcon} style={{marginBottom:'10px'}}/>\n                    <TextField   type=\"date\"\n                                 className={props.classes.input}\n                                 defaultValue={getDate()}\n                                 onChange={changeDate}>\n                    </TextField>\n                </div>\n\n                {radioButtons}\n                <div className={props.classes.divInput}>\n                    <Done className={props.classes.svgIcon}/>\n                    <FormControl className={props.classes.formControl}>\n                        <InputLabel htmlFor=\"status-native-simple\">Статус</InputLabel>\n                        <Select\n                            native\n                            inputProps={{name: 'age', id: 'status-native-simple'}}\n                            onChange={(evt)=>setStatus(evt.target.value)}>\n                            <option value={'Выполняется'}>Выполняется</option>\n                            <option value={'На потом'}>На потом</option>\n                            <option value={'Выполнена'}>Выполнена</option>\n                        </Select>\n                    </FormControl>\n                </div >\n                <div className={props.classes.divInput} style={{alignItems: 'start'}}>\n                    <AddAlert className={props.classes.svgIcon} style={{marginTop: '15px'}}/>\n                    <SelectReact options={options}\n                                 value={{selectedOption}}\n                                 placeholder=\"Тег\" onChange={(opt)=>setTag(opt.value)}\n                                 styles={selectStyles}/>\n                </div>\n\n            </form>\n            <div color=\"primary\" className={props.classes.divButtons}>\n                <Button size=\"medium\" fullWidth={false} color='primary'\n                         variant='outlined' className={props.classes.button}\n                         onClick={saveData}>\n                Сохранить\n            </Button>\n                <Button size=\"medium\" fullWidth={false} color='secondary'\n                        variant='outlined' className={props.classes.button}\n                        onClick={cancel}\n                >\n                    Отмена\n                </Button>\n            </div>\n            {progress}\n            {snackBar}\n        </Drawer>\n    )\n};\n\nexport default withStyles(styles)(sidePanel);","import React, {useContext, useState, useEffect} from 'react';\nimport {TableBody, TableCell, TableRow,IconButton, Menu, MenuItem, withStyles, Fab, Icon} from \"@material-ui/core\";\nimport {MoreVert, Edit, Delete} from \"@material-ui/icons\";\n\nimport {Context} from \"./todo\";\n\n\n\nconst styles = {\n    divImportance:{\n        display: 'flex'\n    },\n    tableSell: {\n        height: '30px'\n    }\n\n};\n\n\nconst mainTableContent = (props)=>{\n\n    const IndexContext = React.createContext(openIndex);\n\n    const {stateValue, dispatchValue} = useContext(Context);\n    const {stateEdit, dispatchEdit} = useContext(Context);\n    const {stateIndex, dispatchIndex} = useContext(Context);\n\n\n    const [openMenu, setOpenMenu] = useState(false);\n    const [openIndex, setOpenIndex] = useState('');\n    const [hover, setHover] = useState(false);\n    const [indexImpotance, setIndexImportance] = useState(0);\n\n\n    const options = [\n        'Срочная важная задача',\n        'Срочная неважная задача',\n        'Не срочная важная задача',\n        'Не срочная неважная задача'\n    ];\n\n    const handlerClose = (evt, option)=>{\n        setOpenMenu(false);\n        dispatchValue({type: 'importance', index: indexImpotance, option });\n    };\n\n    const handlerOpen = (evt, index)=>{\n        setOpenMenu(true);\n\n    };\n\n    const deleteTask = (evt)=>{\n        dispatchValue({type: 'delete', index: openIndex})\n    };\n\n    const editTask = ()=>{\n        dispatchIndex({type: 'index', index: openIndex});\n        dispatchEdit({type: 'edit'});\n    };\n\n    const buttonsHover =\n        <div style={{width: '100%'}}>\n            <Fab color=\"secondary\" style={{width:'23px',height: '23px', marginRight: '10px'}}>\n                <Edit style={{width: '15px', height: '15px'}} onClick={editTask}/>\n            </Fab>\n            <Fab aria-label=\"Delete\" style={{minHeight: 0,\n                width:'28px',height: '28px'}} onClick={deleteTask}>\n                <Delete />\n            </Fab>\n        </div>;\n\n    const showButtons = hover ? buttonsHover : null;\n\n    const table = stateValue.map((value, index)=>{\n        return (\n            <TableRow key={index} onMouseEnter={()=>setOpenIndex(index)}>\n                <TableCell>{index}</TableCell>\n                <TableCell>{value.status}</TableCell>\n                <TableCell>{value.name}</TableCell>\n                <TableCell>{value.description}</TableCell>\n                <TableCell>{value.date}</TableCell>\n                <TableCell style={{display: 'flex', alignItems: 'center'}}>\n                    {value.radioValue}\n                <div className={props.classes.divImportance} onClick={()=>setIndexImportance(index)}>\n                    <IconButton className={props.classes.fab}\n                        aria-label=\"More\"\n                        aria-haspopup=\"true\"\n                        onClick={(evt)=>handlerOpen(evt, index)}\n                    >\n                        <MoreVert />\n                    </IconButton>\n                    <Menu\n                        id=\"long-menu\"\n                        open={openMenu} >\n                        {options.map(option => (\n                            <MenuItem key={option} onClick={(evt)=>handlerClose(evt, option)}>\n                                {option}\n                            </MenuItem>\n                        ))}\n                    </Menu>\n                </div>\n                </TableCell>\n                <TableCell>{value.tag}</TableCell>\n                <TableCell onMouseOver={()=>setHover(true)}\n                    style={{minWidth: '80px'}} onMouseLeave={()=>setHover(false)}\n                           >\n                    {showButtons}\n                </TableCell>\n            </TableRow>\n        )\n    });\n\n    return(\n            <TableBody>\n                {table}\n            </TableBody>\n\n    );\n};\n\nexport default withStyles(styles)(mainTableContent);","import React, {useContext, useState} from 'react';\nimport {\n    Drawer, withStyles, TextField, RadioGroup, FormControlLabel, Radio,\n    FormControl, InputLabel, Select, Button, Fab, CircularProgress} from \"@material-ui/core\";\nimport SelectReact from 'react-select';\nimport {List, Description, DateRange, Done, AddAlert, Check, Save} from '@material-ui/icons';\n\nimport {Context} from \"./todo\";\n\nconst styles = {\n    paper: {\n        width: '40%',\n        padding: '40px 0 60px 0',\n        position: 'relative',\n        height: '60%'\n    },\n    appBar: {\n        width: '40%',\n        left: '0'\n    },\n    h2:{\n        padding: '10px'\n    },\n    form:{\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        alignItems: 'center',\n        paddingTop: '5px'\n    },\n    input: {\n        width: '50%',\n        paddingBottom: '10px'\n    },\n    formGroup:{\n        flexDirection: 'column'\n    },\n    formControl: {\n        width: '50%'\n    },\n    button: {\n        width: '40%',\n\n    },\n    divButtons: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        position: 'fixed',\n        left: '0',\n        width: '40%',\n        top: '62%',\n        paddingBottom: '20px'\n    },\n    divInput: {\n        display: 'flex',\n        width: '100%',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    svgIcon:{\n        width: '30px',\n    },\n    fabProgress: {\n        position: 'absolute',\n        top: -6,\n        left: -6,\n        zIndex: 1,\n    },\n    progressWrapper: {\n        position: 'absolute',\n        top: '0',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        left: '0',\n        right: '0',\n        width: '20%',\n        marginTop: 'auto',\n        marginBottom: 'auto',\n        bottom: '0',\n        height: '20%',\n    }\n};\n\nconst options = [\n    { value: 'тег0', label: 'тег0'},\n    { value: 'тег1', label: 'тег1'},\n    { value: 'тег2', label: 'тег2'},\n    { value: 'тег3', label: 'тег3'}\n];\n\nconst selectStyles = {\n    container: (styles)=>{\n        return {\n            ...styles,\n            width: '50%',\n            padding: '10px 0 10px 0',\n            height: '50px',\n            marginBottom: '90px'\n        }\n    }\n};\n\nconst sidePanel = (props)=>{\n\n    const {stateEdit, dispatchEdit} = useContext(Context);\n    const {stateValue, dispatchValue} = useContext(Context);\n    const {stateIndex, dispatchIndex} = useContext(Context);\n\n    const [radioButtonsState, setRadioButtonsState] = useState(false);\n    const [date, setDate]=useState(stateValue[stateIndex].date);\n    const [errorInput, setErrorInput] = useState(false);\n    const [name, setName] = useState(stateValue[stateIndex].name);\n    const [description, setDescription] = useState(stateValue[stateIndex].description);\n    const [radioValue, setRadioValue] = useState(stateValue[stateIndex].radioValue);\n    const [status, setStatus] = useState(stateValue[stateIndex].status);\n    const [tag, setTag] = useState(stateValue[stateIndex].tag);\n    const [progressState, setProgressState] = useState({loading: false, success: false, show:false});\n\n\n    const getDate = ()=>{\n        return stateValue[stateIndex].date\n    };\n\n    let radioButtons = null;\n    if (stateValue[stateIndex].radioValue){\n        radioButtons = <RadioGroup row={true}\n                                   className={props.classes.formGroup}\n                                   onChange={(evt)=>setRadioValue(evt.target.value)}\n        value={stateValue[stateIndex].radioValue}>\n            <FormControlLabel value=\"Срочная важная задача\"\n                              control={<Radio />}\n                              label=\"Срочная важная задача\"  />\n            <FormControlLabel value=\"Срочная неважная задача\"\n                              control={<Radio />}\n                              label=\"Срочная неважная задача\" />\n            <FormControlLabel value=\"Не срочная важная задача\"\n                              control={<Radio />}\n                              label=\"Не срочная важная задача\" />\n            <FormControlLabel value=\"Не срочная не важная задача\"\n                              control={<Radio />}\n                              label=\"Не срочная не важная задача\" />\n        </RadioGroup>;\n    }\n\n    const changeDate = (evt)=>{\n        setDate(evt.target.value);\n        setRadioButtonsState(true);\n    };\n\n    const saveData = ()=>{\n        let result = {name, description, date, radioValue, status, tag};\n            dispatchValue({type: 'saveEditedData', index: stateIndex, name: result.name, description: result.description,\n                date: result.date, radioValue: result.radioValue, status: result.status,\n                tag: result.tag});\n\n        setProgressState({show: true, loading: true, success: false});\n\n        setTimeout(() => {\n            setProgressState({\n                loading: false,\n                success: true,\n                show: false\n            });\n            dispatchEdit({type: 'false'})\n        }, 2000);\n    };\n\n    const selectedValue = ()=>{\n            return options.filter((option)=>{\n                return option.value === stateValue[stateIndex].tag\n            })\n    };\n\n\n    const progress = progressState.show ? <div className={props.classes.progressWrapper}>\n        <Fab color=\"primary\">\n            {progressState.success ? <Check /> : <Save />}\n        </Fab>\n        {progressState.loading && <CircularProgress size={68} className={props.classes.fabProgress} />}\n    </div> : null;\n\n    return(\n        <Drawer open={true} classes={{paper: props.classes.paper}}>\n            <form className={props.classes.form}>\n                <div className={props.classes.divInput}>\n                    <List className={props.classes.svgIcon} style={{marginTop: '10px'}}/>\n                    <TextField label='Название' type='text'\n                               className={props.classes.input}\n                               onChange={(evt)=>setName(evt.target.value)}\n                               error={errorInput} required={true}\n                               helperText={errorInput ? 'Обязательное поле' :\n                                   ''} defaultValue={stateValue[stateIndex].name}>\n\n                    </TextField>\n                </div>\n                <div className={props.classes.divInput}>\n                    <Description className={props.classes.svgIcon}/>\n                    <TextField label='Описание задачи' type='text'\n                               className={props.classes.input}\n                               multiline={true} onChange={(evt)=>setDescription(evt.target.value)}\n                               defaultValue={stateValue[stateIndex].description}>\n                    </TextField>\n                </div>\n                <div className={props.classes.divInput}>\n                    <DateRange className={props.classes.svgIcon} style={{marginBottom:'10px'}}/>\n                    <TextField   type=\"date\"\n                                 className={props.classes.input}\n                                 defaultValue={getDate()}\n                                 onChange={changeDate}>\n                    </TextField>\n                </div>\n\n                {radioButtons}\n                <div className={props.classes.divInput}>\n                    <Done className={props.classes.svgIcon}/>\n                    <FormControl className={props.classes.formControl}>\n                        <InputLabel htmlFor=\"status-native-simple\">Статус</InputLabel>\n                        <Select\n                            native\n                            inputProps={{name: 'age', id: 'status-native-simple'}}\n                            onChange={(evt)=>setStatus(evt.target.value)}\n                            defaultValue={stateValue[stateIndex].status}>\n                            <option value={'Выполняется'}>Выполняется</option>\n                            <option value={'На потом'}>На потом</option>\n                            <option value={'Выполнена'}>Выполнена</option>\n                        </Select>\n                    </FormControl>\n                </div >\n                <div className={props.classes.divInput} style={{alignItems: 'start'}}>\n                    <AddAlert className={props.classes.svgIcon} style={{marginTop: '15px'}}/>\n                    <SelectReact options={options}\n                                 value={selectedValue()}\n                                 placeholder=\"Тег\" onChange={(opt)=>setTag(opt.value)}\n                                 styles={selectStyles}/>\n                </div>\n\n            </form>\n            <div color=\"primary\" className={props.classes.divButtons}>\n                <Button size=\"medium\" fullWidth={false} color='primary'\n                        variant='outlined' className={props.classes.button}\n                        onClick={saveData}>\n                    Сохранить\n                </Button>\n                <Button size=\"medium\" fullWidth={false} color='secondary'\n                        variant='outlined' className={props.classes.button}\n                        onClick={()=>dispatchEdit({type: 'editFalse'})}\n                >\n                    Отмена\n                </Button>\n            </div>\n            {progress}\n        </Drawer>\n    )\n};\n\nexport default withStyles(styles)(sidePanel);","export const reducerFormValue = (state, action)=>{\n    switch (action.type){\n        case 'add':\n            return [...state, {name: action.name, description: action.description, date: action.date,\n                radioValue: action.radioValue, status: action.status, tag: action.tag}];\n        case 'importance':\n            return state.map((value, index)=>{\n                if (index === action.index){\n                    value.radioValue = action.option;\n                    console.log(action.option, index);\n                    return value\n                } else return value\n            });\n        case 'delete':\n            return state.filter((value, index)=>{\n                if (index !== action.index){\n                    return value\n                }\n            });\n        case 'edit':\n            return false;\n        case 'saveEditedData':\n            return state.map((value, index)=>{\n                if (index === action.index){\n                    return {name: action.name, description: action.description, date: action.date,\n                        radioValue: action.radioValue, status: action.status, tag: action.tag}\n                }else return value\n            })\n    }\n};\n\nexport const reducerEdit =(state, action)=>{\n    switch (action.type) {\n        case 'edit':\n            return true;\n        case 'editFalse':\n            return false;\n    }\n};\n\nexport const reducerIndex = (state, action)=>{\n    switch (action.type) {\n        case 'index':\n            return action.index\n    }\n};\n\n","import React, {Fragment,useReducer} from 'react';\n\nimport {\n    AppBar, Typography, withStyles, Button, Table,\n    TableHead, TableRow, TableCell} from \"@material-ui/core\";\nimport SidePanel from './sidePanel';\nimport MainTableContent from './mainTableContent';\nimport EditTodo from './editTodo';\nimport {reducerFormValue, reducerEdit, reducerIndex} from \"./reducers/reducers\";\n\nexport const Context = React.createContext(null);\n\nconst styles = {\n    root: {\n        padding: '10px'\n    },\n    button: {\n        margin: '10px'\n    }\n\n};\n\nconst todo = (props)=>{\n\n    const reducer = (state, action)=>{\n        switch (action.type) {\n            case 'true':\n                return true;\n            case 'false':\n                return false;\n            default: return\n        }\n    };\n\n    const [state, dispatch] = useReducer(reducer, false);\n    const [stateValue, dispatchValue] = useReducer(reducerFormValue, []);\n    const [stateEdit, dispatchEdit] = useReducer(reducerEdit, false);\n    const [stateIndex, dispatchIndex] = useReducer(reducerIndex, null);\n\n    console.log(stateIndex);\n\n\n    const addTask =  (evt)=>{\n        dispatch({type: 'true'})\n    };\n\n    const panel = (state) ? <Context.Provider value={{\n        state, dispatch, stateValue, dispatchValue}}>\n        <SidePanel/></Context.Provider> : null;\n\n        const todoEdit = stateEdit ? <Context.Provider value={{\n            stateEdit, dispatchEdit, stateValue, dispatchValue,\n        stateIndex, dispatchIndex}}>\n            <EditTodo/></Context.Provider> : null;\n\n        return(\n        <Fragment>\n            <AppBar className={props.classes.root} position=\"static\" color=\"primary\">\n                <Typography color=\"inherit\" align='center'\n                            variant='title'>\n                    Список задач\n                </Typography>\n            </AppBar>\n            <Button size=\"medium\" fullWidth={false} color='primary'\n            variant='outlined' className={props.classes.button}\n            onClick={addTask}>\n                Добавить задачу\n            </Button>\n            {panel}\n            {todoEdit}\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>\n                            id\n                        </TableCell>\n                        <TableCell>\n                            Статус\n                        </TableCell>\n                        <TableCell>\n                            Название\n                        </TableCell>\n                        <TableCell>\n                            Описание\n                        </TableCell>\n                        <TableCell>\n                            Дата выполнения\n                        </TableCell>\n                        <TableCell>\n                            Важность\n                        </TableCell>\n                        <TableCell>\n                            Тег\n                        </TableCell>\n                        <TableCell>\n                            Действие\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <Context.Provider value={{stateValue, dispatchValue,\n                stateEdit, dispatchEdit, stateIndex, dispatchIndex}}>\n                    <MainTableContent/>\n                </Context.Provider>\n            </Table>\n        </Fragment>\n\n    );\n\n};\n\nexport default withStyles(styles)(todo);","import React, { Component } from 'react';\n\nimport Todo from './components/todo';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Todo/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}